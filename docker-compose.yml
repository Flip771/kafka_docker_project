version: '3'

networks:
    appnetwork:
        external: true

services:
  producer:
    image: producer
    ports:
      - "8080:8080"
    networks:
      - appnetwork
    depends_on:
      - mysql
      - kafka
    environment:
      MYSQL_HOST: dockerkafka-mysql-1
      KAFKA_HOST: kafka

  consumer:
    image: consumer
    ports:
      - "8081:8081"
    networks:
      - appnetwork
    depends_on:
      - mysql
      - kafka
    environment:
      MYSQL_HOST: dockerkafka-mysql-1
      SQL_DIALECT: MySQLDialect
      KAFKA_HOST: kafka


  mysql:
    image: mysql:8.4.0
    restart: always
    ports:
      - "3306:3306"
    networks:
      - appnetwork
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: user_db

    volumes:
      - /opt/mysql_data:/var/lib/mysql
  zookeeper:
    image: ubuntu/zookeeper
    container_name: zookeeper
    networks:
      - appnetwork
    ports:
      - "2181:2181"
  kafka:
    image: ubuntu/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    networks:
      - appnetwork
    depends_on:
      - zookeeper
    environment:
      KAFKA_LISTENERS:
        "INTERNAL://kafka:9090,\
         EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS:
        "INTERNAL://kafka:9090,\
         EXTERNAL://dockervm:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:
        "INTERNAL:PLAINTEXT,\
         EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      

  